Extending the Lambda Calculus to Express Randomized and Quantumized
  Algorithms
This paper introduces a formal metalanguage called the lambda-q calculus for
the specification of quantum programming languages. This metalanguage is an
extension of the lambda calculus, which provides a formal setting for the
specification of classical programming languages. As an intermediary step, we
introduce a formal metalanguage called the lambda-p calculus for the
specification of programming languages that allow true random number
generation. We demonstrate how selected randomized algorithms can be programmed
directly in the lambda-p calculus. We also demonstrate how satisfiability can
be solved in the lambda-q calculus.