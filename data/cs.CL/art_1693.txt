Syntax Evolution: Problems and Recursion
To investigate the evolution of syntax, we need to ascertain the evolutionary
r\^ole of syntax and, before that, the very nature of syntax. Here, we will
assume that syntax is computing. And then, since we are computationally Turing
complete, we meet an evolutionary anomaly, the anomaly of sytax: we are
syntactically too competent for syntax. Assuming that problem solving is
computing, and realizing that the evolutionary advantage of Turing completeness
is full problem solving and not syntactic proficiency, we explain the anomaly
of syntax by postulating that syntax and problem solving co-evolved in humans
towards Turing completeness. Examining the requirements that full problem
solving impose on language, we find firstly that semantics is not sufficient
and that syntax is necessary to represent problems. Our final conclusion is
that full problem solving requires a functional semantics on an infinite
tree-structured syntax. Besides these results, the introduction of Turing
completeness and problem solving to explain the evolution of syntax should help
us to fit the evolution of language within the evolution of cognition, giving
us some new clues to understand the elusive relation between language and
thinking.