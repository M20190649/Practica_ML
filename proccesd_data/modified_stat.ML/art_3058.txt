 provable svd-based algorithm learn topic dominant admixture corpus topic model latent dirichlet allocation lda posit document draw admixture distribution word know topic inference problem recover topic admixture np-hard assume separability strong assumption give first provable algorithm inference lda model give provable algorithm use tensor-methods learn topic vector bounded l error natural measure probability vector aim develop model make intuitive empirically support assumption design algorithm natural simple component svd provably solve inference problem model bounded l error topic lda model essentially characterize group co-occurring word motivate introduce topic specific catchword group word occur strictly great frequency topic topic individually require high frequency together rather individually major contribution paper show realistic assumption empirically verify real corpus singular value decomposition svd base algorithm crucial pre-processing step thresholding provably recover topic collection document draw dominant admixture dominant admixture convex combination distribution one distribution significantly high contribution others apart simplicity algorithm sample complexity near optimal dependence w low probability topic dominant good empirical evidence show several real world corpus catchword dominant admixture assumption hold propose algorithm substantially outperform state art