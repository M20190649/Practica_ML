 lt c language thought turing-computable kolmogorov complexity paper present theoretical effort connect theory program size psychology implement concrete language thought turing-computable kolmogorov complexity lt c satisfy following requirement simple enough complexity give finite binary sequence compute base tangible operation human reason printing repeating ... sufficiently powerful generate possible sequence powerful identify regularity would invisible human first formalize lt c give syntax semantics define adequate notion program size set lead kolmogorov complexity function relative lt c computable polynomial time also induce prediction algorithm spirit solomonoff 's inductive inference theory prove efficacy language investigate regularity string produce participant attempt generate random string participant profound understanding randomness hence avoid typical misconception exaggerate number alternation reason remain regularity would express algorithmic nature human thought reveal form specific pattern kolmogorov complexity relative lt c pass three expect test examine human sequence less complex control prng sequence human sequence stationary show decrease value complexity result fatigue individual show trace algorithmic stability since fitting partial sequence effective predict subsequent sequence average fit work extend previous effort combine notion kolmogorov complexity theory algorithmic information theory psychology explicitly ...